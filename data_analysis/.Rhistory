sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_first[xor_first$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_both <- read.csv("../data/solve-xor-snn-learn-both-layers", header=TRUE)
xor_both[3000:4000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_both$squared_error, list(xor_both$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_both$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_both[xor_both$c_11 != 0 & xor_both$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$c_21 != 0 & xor_both$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_both[xor_both$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_complex <- read.csv("../data/solve-xor-complex-snn", header=TRUE)
xor_complex[14000:16000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_complex$squared_error, list(xor_complex$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_complex$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_complex[xor_complex$c_11 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_11)) +
geom_line() +
labs(title="Input synapse 11", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_13 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_13)) +
geom_line() +
labs(title="Input synapse 13", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_22 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_22)) +
geom_line() +
labs(title="Input synapse 22", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_23 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_23)) +
geom_line() +
labs(title="Input synapse 23", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_3 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_3)) +
geom_line() +
labs(title="Hidden synapse 3", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
library(ggplot2)
library(reshape2)
rm(list=ls())
xor_first <- read.csv("../data/solve-xor-snn-learn-first-layer", header=TRUE)
tail(xor_first)
# Plot the MSE against the epoch number
mse <- aggregate(xor_first$squared_error, list(xor_first$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_first$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_first[xor_first$c_11 != 0 & xor_first$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$c_21 != 0 & xor_first$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_first[xor_first$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_both <- read.csv("../data/solve-xor-snn-learn-both-layers", header=TRUE)
xor_both[3000:4000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_both$squared_error, list(xor_both$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_both$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_both[xor_both$c_11 != 0 & xor_both$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$c_21 != 0 & xor_both$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_both[xor_both$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_complex <- read.csv("../data/solve-xor-complex-snn", header=TRUE)
xor_complex[14000:16000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_complex$squared_error, list(xor_complex$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_complex$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_complex[xor_complex$c_11 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_11)) +
geom_line() +
labs(title="Input synapse 11", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_13 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_13)) +
geom_line() +
labs(title="Input synapse 13", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_22 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_22)) +
geom_line() +
labs(title="Input synapse 22", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_23 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_23)) +
geom_line() +
labs(title="Input synapse 23", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_3 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_3)) +
geom_line() +
labs(title="Hidden synapse 3", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
library(ggplot2)
library(reshape2)
rm(list=ls())
xor_first <- read.csv("../data/solve-xor-snn-learn-first-layer", header=TRUE)
tail(xor_first)
# Plot the MSE against the epoch number
mse <- aggregate(xor_first$squared_error, list(xor_first$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_first$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_first[xor_first$c_11 != 0 & xor_first$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$c_21 != 0 & xor_first$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_first[xor_first$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_both <- read.csv("../data/solve-xor-snn-learn-both-layers", header=TRUE)
xor_both[3000:4000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_both$squared_error, list(xor_both$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_both$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_both[xor_both$c_11 != 0 & xor_both$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$c_21 != 0 & xor_both$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_both[xor_both$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_complex <- read.csv("../data/solve-xor-complex-snn", header=TRUE)
xor_complex[14000:16000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_complex$squared_error, list(xor_complex$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_complex$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_complex[xor_complex$c_11 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_11)) +
geom_line() +
labs(title="Input synapse 11", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_13 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_13)) +
geom_line() +
labs(title="Input synapse 13", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_22 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_22)) +
geom_line() +
labs(title="Input synapse 22", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_23 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_23)) +
geom_line() +
labs(title="Input synapse 23", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_3 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_3)) +
geom_line() +
labs(title="Hidden synapse 3", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
library(ggplot2)
library(reshape2)
rm(list=ls())
xor_first <- read.csv("../data/solve-xor-snn-learn-first-layer", header=TRUE)
tail(xor_first)
# Plot the MSE against the epoch number
mse <- aggregate(xor_first$squared_error, list(xor_first$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_first$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_first[xor_first$c_11 != 0 & xor_first$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$c_21 != 0 & xor_first$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_first[xor_first$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_first[xor_first$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_both <- read.csv("../data/solve-xor-snn-learn-both-layers", header=TRUE)
xor_both[3000:4000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_both$squared_error, list(xor_both$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_both$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_both[xor_both$c_11 != 0 & xor_both$c_12 != 0,]
sub_dat <- sub_dat[c("c_11", "c_12", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 11", "input_synapse 12"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$c_21 != 0 & xor_both$c_22 != 0,]
sub_dat <- sub_dat[c("c_21", "c_22", "epoch")]
sub_dat <- melt(sub_dat, id ="epoch")
ggplot(data=sub_dat, aes(x=epoch, y=value, colour=variable)) +
geom_line() +
labs(x="Epoch", y="Current (µA)", color="Synapses") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15)) +
scale_color_manual( labels=c("input synapse 21", "input_synapse 22"), values=c("black", "orange"))
sub_dat <- xor_both[xor_both$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_both[xor_both$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
xor_complex <- read.csv("../data/solve-xor-complex-snn", header=TRUE)
xor_complex[14000:16000,]
# Plot the MSE against the epoch number
mse <- aggregate(xor_complex$squared_error, list(xor_complex$epoch), mean)
colnames(mse) <- c("epoch", "mse")
ggplot(data=mse, aes(x=epoch, y=mse)) +
geom_line() +
labs(title=paste(c("Learning pulses =", unique(xor_complex$learning_pulses)),  collapse=" "), x="Epoch", y="MSE") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
# Plot the current values against the epoch number for every synapse
sub_dat <- xor_complex[xor_complex$c_11 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_11)) +
geom_line() +
labs(title="Input synapse 11", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_13 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_13)) +
geom_line() +
labs(title="Input synapse 13", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_22 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_22)) +
geom_line() +
labs(title="Input synapse 22", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$c_23 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=c_23)) +
geom_line() +
labs(title="Input synapse 23", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_1 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_1)) +
geom_line() +
labs(title="Hidden synapse 1", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_2 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_2)) +
geom_line() +
labs(title="Hidden synapse 2", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
sub_dat <- xor_complex[xor_complex$z_3 != 0,]
ggplot(data=sub_dat, aes(x=epoch, y=z_3)) +
geom_line() +
labs(title="Hidden synapse 3", x="Epoch", y="Current (µA)") +
theme(plot.title=element_text(hjust=0.5), text = element_text(size=15))
rm(list=ls())
setwd("~/Desktop/MultiAgentSystems/data_analysis")
library(checkpoint)
checkpoint("2019-10-29")
library(ggplot2)
# info - false , fire - 1,1
dat1 <- read.csv("./info_false_fire_1", header=TRUE)
dat2 <- read.csv("./info_true_fire_1", header=TRUE)
dat3 <- read.csv("./info_false_fire_47_15", header=TRUE)
dat4 <- read.csv("./info_true_fire_47_15", header=TRUE)
# join the data
data_all <- do.call("rbind", list(dat1, dat2, dat3, dat4))
# add K to N
data_all$N <- as.numeric(data_all$N) + as.numeric(data_all$K)
# extract average alive civilians
mean_alive <- aggregate(data_all$Agents.saved, by=list(data_all$N, data_all$K, data_all$fire_x, data_all$civil_info_exchange), mean)
sd_alive <- aggregate(data_all$Agents.saved, by=list(data_all$N, data_all$K, data_all$fire_x, data_all$civil_info_exchange), sd)
alive_civilians <- mean_alive
alive_civilians$sd <- sd_alive$x
colnames(alive_civilians) <- c("num_civilians", "num_stewards", "fire_x", "info_exchange", "mean", "sd")
alive_civilians
# Plot mean alive as a function of civilians and group of stewards for each fire position and each info exchange.
fire_1_true <- alive_civilians[which(alive_civilians$fire_x==1 & alive_civilians$info_exchange=="True"),]
fire_1_true
ggplot(fire_1_true ,aes(x=num_civilians, y=mean)) +
geom_point(aes(colour=num_stewards), size=2.5) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), colour="red", width=.3) +
theme(text = element_text(size=15)) +
labs(x="Number of agents", y=paste("Average number of agents alive"), col="Number of stewards") +
ggtitle("Fire starts at (1,1) - Civilians Exchange Information")
fire_1_false <- alive_civilians[which(alive_civilians$fire_x==1 & alive_civilians$info_exchange=="False"),]
fire_1_false
ggplot(fire_1_false ,aes(x=num_civilians, y=mean)) +
geom_point(aes(colour=num_stewards), size=2.5) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), colour="red", width=.3) +
theme(text = element_text(size=15)) +
labs(x="Number of agents", y=paste("Average number of agents alive"), col="Number of stewards") +
ggtitle("Fire starts at (1,1) - Civilians Don't Exchange Information")
fire_47_true <- alive_civilians[which(alive_civilians$fire_x==47 & alive_civilians$info_exchange=="True"),]
fire_47_true
ggplot(fire_47_true ,aes(x=num_civilians, y=mean)) +
geom_point(aes(colour=num_stewards), size=2.5) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), colour="red", width=.3) +
theme(text = element_text(size=15)) +
labs(x="Number of agents", y=paste("Average number of agents alive"), col="Number of stewards") +
ggtitle("Fire starts at (47,15) - Civilians Exchange Information")
fire_47_false <- alive_civilians[which(alive_civilians$fire_x==47 & alive_civilians$info_exchange=="False"),]
fire_47_false
ggplot(fire_47_false ,aes(x=num_civilians, y=mean)) +
geom_point(aes(colour=num_stewards), size=2.5) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), colour="red", width=.3) +
theme(text = element_text(size=15)) +
labs(x="Number of agents", y=paste("Average number of agents alive"), col="Number of stewards") +
ggtitle("Fire starts at (47,15) - Civilians Don't Exchange Information")
